// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/GDGVIT/Project-Hades/organization/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	LoginEndpoint             endpoint.Endpoint
	SignupEndpoint            endpoint.Endpoint
	CreateOrgEndpoint         endpoint.Endpoint
	LoginOrgEndpoint          endpoint.Endpoint
	AddMembersEndpoint        endpoint.Endpoint
	BulkAddMembersEndpoint    endpoint.Endpoint
	RemoveMembersEndpoint     endpoint.Endpoint
	BulkRemoveMembersEndpoint endpoint.Endpoint
	ShowProfileEndpoint       endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.OrganizationService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		AddMembersEndpoint:        MakeAddMembersEndpoint(s),
		BulkAddMembersEndpoint:    MakeBulkAddMembersEndpoint(s),
		BulkRemoveMembersEndpoint: MakeBulkRemoveMembersEndpoint(s),
		CreateOrgEndpoint:         MakeCreateOrgEndpoint(s),
		LoginEndpoint:             MakeLoginEndpoint(s),
		LoginOrgEndpoint:          MakeLoginOrgEndpoint(s),
		RemoveMembersEndpoint:     MakeRemoveMembersEndpoint(s),
		ShowProfileEndpoint:       MakeShowProfileEndpoint(s),
		SignupEndpoint:            MakeSignupEndpoint(s),
	}
	for _, m := range mdw["Login"] {
		eps.LoginEndpoint = m(eps.LoginEndpoint)
	}
	for _, m := range mdw["Signup"] {
		eps.SignupEndpoint = m(eps.SignupEndpoint)
	}
	for _, m := range mdw["CreateOrg"] {
		eps.CreateOrgEndpoint = m(eps.CreateOrgEndpoint)
	}
	for _, m := range mdw["LoginOrg"] {
		eps.LoginOrgEndpoint = m(eps.LoginOrgEndpoint)
	}
	for _, m := range mdw["AddMembers"] {
		eps.AddMembersEndpoint = m(eps.AddMembersEndpoint)
	}
	for _, m := range mdw["BulkAddMembers"] {
		eps.BulkAddMembersEndpoint = m(eps.BulkAddMembersEndpoint)
	}
	for _, m := range mdw["RemoveMembers"] {
		eps.RemoveMembersEndpoint = m(eps.RemoveMembersEndpoint)
	}
	for _, m := range mdw["BulkRemoveMembers"] {
		eps.BulkRemoveMembersEndpoint = m(eps.BulkRemoveMembersEndpoint)
	}
	for _, m := range mdw["ShowProfile"] {
		eps.ShowProfileEndpoint = m(eps.ShowProfileEndpoint)
	}
	return eps
}
