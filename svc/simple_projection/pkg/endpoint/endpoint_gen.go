// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/GDGVIT/Project-Hades/simple_projection/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	ProjectAllEndpoint     endpoint.Endpoint
	ProjectPresentEndpoint endpoint.Endpoint
	ProjectAbsentEndpoint  endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.SimpleProjectionService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		ProjectAbsentEndpoint:  MakeProjectAbsentEndpoint(s),
		ProjectAllEndpoint:     MakeProjectAllEndpoint(s),
		ProjectPresentEndpoint: MakeProjectPresentEndpoint(s),
	}
	for _, m := range mdw["ProjectAll"] {
		eps.ProjectAllEndpoint = m(eps.ProjectAllEndpoint)
	}
	for _, m := range mdw["ProjectPresent"] {
		eps.ProjectPresentEndpoint = m(eps.ProjectPresentEndpoint)
	}
	for _, m := range mdw["ProjectAbsent"] {
		eps.ProjectAbsentEndpoint = m(eps.ProjectAbsentEndpoint)
	}
	return eps
}
