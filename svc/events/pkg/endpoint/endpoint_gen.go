// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/GDGVIT/Project-Hades/events/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreateEventEndpoint endpoint.Endpoint
	ReadEventEndpoint   endpoint.Endpoint
	UpdateEventEndpoint endpoint.Endpoint
	DeleteEventEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.EventsService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateEventEndpoint: MakeCreateEventEndpoint(s),
		DeleteEventEndpoint: MakeDeleteEventEndpoint(s),
		ReadEventEndpoint:   MakeReadEventEndpoint(s),
		UpdateEventEndpoint: MakeUpdateEventEndpoint(s),
	}
	for _, m := range mdw["CreateEvent"] {
		eps.CreateEventEndpoint = m(eps.CreateEventEndpoint)
	}
	for _, m := range mdw["ReadEvent"] {
		eps.ReadEventEndpoint = m(eps.ReadEventEndpoint)
	}
	for _, m := range mdw["UpdateEvent"] {
		eps.UpdateEventEndpoint = m(eps.UpdateEventEndpoint)
	}
	for _, m := range mdw["DeleteEvent"] {
		eps.DeleteEventEndpoint = m(eps.DeleteEventEndpoint)
	}
	return eps
}
