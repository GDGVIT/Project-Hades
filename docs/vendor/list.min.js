// List.js v1.3.0 (http://www.listjs.com) by Jonny StrÃ¶mberg (http://javve.com)
!(function a(b, c, d) { function e(g, h) { if (!c[g]) { if (!b[g]) { const i = typeof require === 'function' && require; if (!h && i) return i(g, !0); if (f) return f(g, !0); const j = new Error(`Cannot find module '${g}'`); throw j.code = 'MODULE_NOT_FOUND', j; } const k = c[g] = { exports: {} }; b[g][0].call(k.exports, (a) => { const c = b[g][1][a]; return e(c || a); }, k, k.exports, a, b, c, d); } return c[g].exports; } for (var f = typeof require === 'function' && require, g = 0; g < d.length; g++)e(d[g]); return e; }({
  1: [function (a, b, c) {
    !(function (c, d) {
      const e = c.document; const f = a('./src/utils/get-by-class'); const g = a('./src/utils/extend'); const h = a('./src/utils/index-of'); const i = a('./src/utils/events'); const j = a('./src/utils/to-string'); const k = a('./src/utils/natural-sort'); const l = a('./src/utils/classes'); const m = a('./src/utils/get-attribute'); const n = a('./src/utils/to-array'); var o = function (b, c, p) {
        let q; const r = this; const s = a('./src/item')(r); const t = a('./src/add-async')(r); q = {
          start() {
            r.listClass = 'list', r.searchClass = 'search', r.sortClass = 'sort', r.page = 1e4, r.i = 1, r.items = [], r.visibleItems = [], r.matchingItems = [], r.searched = !1, r.filtered = !1, r.searchColumns = d, r.handlers = { updated: [] }, r.plugins = {}, r.valueNames = [], r.utils = {
              getByClass: f, extend: g, indexOf: h, events: i, toString: j, naturalSort: k, classes: l, getAttribute: m, toArray: n,
            }, r.utils.extend(r, c), r.listContainer = typeof b === 'string' ? e.getElementById(b) : b, r.listContainer && (r.list = f(r.listContainer, r.listClass, !0), r.parse = a('./src/parse')(r), r.templater = a('./src/templater')(r), r.search = a('./src/search')(r), r.filter = a('./src/filter')(r), r.sort = a('./src/sort')(r), this.handlers(), this.items(), r.update(), this.plugins());
          },
          handlers() { for (const a in r.handlers)r[a] && r.on(a, r[a]); },
          items() { r.parse(r.list), p !== d && r.add(p); },
          plugins() { for (let a = 0; a < r.plugins.length; a++) { const b = r.plugins[a]; r[b.name] = b, b.init(r, o); } },
        }, this.reIndex = function () { r.items = [], r.visibleItems = [], r.matchingItems = [], r.searched = !1, r.filtered = !1, r.parse(r.list); }, this.toJSON = function () { for (var a = [], b = 0, c = r.items.length; b < c; b++)a.push(r.items[b].values()); return a; }, this.add = function (a, b) { if (a.length !== 0) { if (b) return void t(a, b); const c = []; let e = !1; a[0] === d && (a = [a]); for (let f = 0, g = a.length; f < g; f++) { let h = null; e = r.items.length > r.page, h = new s(a[f], d, e), r.items.push(h), c.push(h); } return r.update(), c; } }, this.show = function (a, b) { return this.i = a, this.page = b, r.update(), r; }, this.remove = function (a, b, c) { for (var d = 0, e = 0, f = r.items.length; e < f; e++)r.items[e].values()[a] == b && (r.templater.remove(r.items[e], c), r.items.splice(e, 1), f--, e--, d++); return r.update(), d; }, this.get = function (a, b) { for (var c = [], d = 0, e = r.items.length; d < e; d++) { const f = r.items[d]; f.values()[a] == b && c.push(f); } return c; }, this.size = function () { return r.items.length; }, this.clear = function () { return r.templater.clear(), r.items = [], r; }, this.on = function (a, b) { return r.handlers[a].push(b), r; }, this.off = function (a, b) { const c = r.handlers[a]; const d = h(c, b); return d > -1 && c.splice(d, 1), r; }, this.trigger = function (a) { for (let b = r.handlers[a].length; b--;)r.handlers[a][b](r); return r; }, this.reset = { filter() { for (let a = r.items, b = a.length; b--;)a[b].filtered = !1; return r; }, search() { for (let a = r.items, b = a.length; b--;)a[b].found = !1; return r; } }, this.update = function () { const a = r.items; const b = a.length; r.visibleItems = [], r.matchingItems = [], r.templater.clear(); for (let c = 0; c < b; c++)a[c].matching() && r.matchingItems.length + 1 >= r.i && r.visibleItems.length < r.page ? (a[c].show(), r.visibleItems.push(a[c]), r.matchingItems.push(a[c])) : a[c].matching() ? (r.matchingItems.push(a[c]), a[c].hide()) : a[c].hide(); return r.trigger('updated'), r; }, q.start();
      }; typeof define === 'function' && define.amd && define(() => o), b.exports = o, c.List = o;
    }(window));
  }, {
    './src/add-async': 2, './src/filter': 3, './src/item': 4, './src/parse': 5, './src/search': 6, './src/sort': 7, './src/templater': 8, './src/utils/classes': 9, './src/utils/events': 10, './src/utils/extend': 11, './src/utils/get-attribute': 12, './src/utils/get-by-class': 13, './src/utils/index-of': 14, './src/utils/natural-sort': 15, './src/utils/to-array': 16, './src/utils/to-string': 17,
  }],
  2: [function (a, b, c) { b.exports = function (a) { var b = function (c, d, e) { const f = c.splice(0, 50); e = e || [], e = e.concat(a.add(f)), c.length > 0 ? setTimeout(() => { b(c, d, e); }, 1) : (a.update(), d(e)); }; return b; }; }, {}],
  3: [function (a, b, c) { b.exports = function (a) { return a.handlers.filterStart = a.handlers.filterStart || [], a.handlers.filterComplete = a.handlers.filterComplete || [], function (b) { if (a.trigger('filterStart'), a.i = 1, a.reset.filter(), void 0 === b)a.filtered = !1; else { a.filtered = !0; for (let c = a.items, d = 0, e = c.length; d < e; d++) { const f = c[d]; b(f) ? f.filtered = !0 : f.filtered = !1; } } return a.update(), a.trigger('filterComplete'), a.visibleItems; }; }; }, {}],
  4: [function (a, b, c) { b.exports = function (a) { return function (b, c, d) { const e = this; this._values = {}, this.found = !1, this.filtered = !1; const f = function (b, c, d) { if (void 0 === c)d ? e.values(b, d) : e.values(b); else { e.elm = c; const f = a.templater.get(e, b); e.values(f); } }; this.values = function (b, c) { if (void 0 === b) return e._values; for (const d in b)e._values[d] = b[d]; c !== !0 && a.templater.set(e, e.values()); }, this.show = function () { a.templater.show(e); }, this.hide = function () { a.templater.hide(e); }, this.matching = function () { return a.filtered && a.searched && e.found && e.filtered || a.filtered && !a.searched && e.filtered || !a.filtered && a.searched && e.found || !a.filtered && !a.searched; }, this.visible = function () { return !(!e.elm || e.elm.parentNode != a.list); }, f(b, c, d); }; }; }, {}],
  5: [function (a, b, c) { b.exports = function (b) { const c = a('./item')(b); const d = function (a) { for (var b = a.childNodes, c = [], d = 0, e = b.length; d < e; d++) void 0 === b[d].data && c.push(b[d]); return c; }; const e = function (a, d) { for (let e = 0, f = a.length; e < f; e++)b.items.push(new c(d, a[e])); }; var f = function (a, c) { const d = a.splice(0, 50); e(d, c), a.length > 0 ? setTimeout(() => { f(a, c); }, 1) : (b.update(), b.trigger('parseComplete')); }; return b.handlers.parseComplete = b.handlers.parseComplete || [], function () { const a = d(b.list); const c = b.valueNames; b.indexAsync ? f(a, c) : e(a, c); }; }; }, { './item': 4 }],
  6: [function (a, b, c) {
    b.exports = function (a) {
      let b; let c; let d; let e; var f = {
        resetList() { a.i = 1, a.templater.clear(), e = void 0; }, setOptions(a) { a.length == 2 && a[1] instanceof Array ? c = a[1] : a.length == 2 && typeof a[1] === 'function' ? (c = void 0, e = a[1]) : a.length == 3 ? (c = a[1], e = a[2]) : c = void 0; }, setColumns() { a.items.length !== 0 && void 0 === c && (c = void 0 === a.searchColumns ? f.toArray(a.items[0].values()) : a.searchColumns); }, setSearchString(b) { b = a.utils.toString(b).toLowerCase(), b = b.replace(/[-[\]{}()*+?.,\\^$|#]/g, '\\$&'), d = b; }, toArray(a) { const b = []; for (const c in a)b.push(c); return b; },
      }; var g = {
        list() { for (let b = 0, c = a.items.length; b < c; b++)g.item(a.items[b]); }, item(a) { a.found = !1; for (let b = 0, d = c.length; b < d; b++) if (g.values(a.values(), c[b])) return void (a.found = !0); }, values(c, e) { return !!(c.hasOwnProperty(e) && (b = a.utils.toString(c[e]).toLowerCase(), d !== '' && b.search(d) > -1)); }, reset() { a.reset.search(), a.searched = !1; },
      }; const h = function (b) { return a.trigger('searchStart'), f.resetList(), f.setSearchString(b), f.setOptions(arguments), f.setColumns(), d === '' ? g.reset() : (a.searched = !0, e ? e(d, c) : g.list()), a.update(), a.trigger('searchComplete'), a.visibleItems; }; return a.handlers.searchStart = a.handlers.searchStart || [], a.handlers.searchComplete = a.handlers.searchComplete || [], a.utils.events.bind(a.utils.getByClass(a.listContainer, a.searchClass), 'keyup', (b) => { const c = b.target || b.srcElement; const d = c.value === '' && !a.searched; d || h(c.value); }), a.utils.events.bind(a.utils.getByClass(a.listContainer, a.searchClass), 'input', (a) => { const b = a.target || a.srcElement; b.value === '' && h(''); }), h;
    };
  }, {}],
  7: [function (a, b, c) {
    b.exports = function (a) {
      a.sortFunction = a.sortFunction || function (b, c, d) { return d.desc = d.order == 'desc', a.utils.naturalSort(b.values()[d.valueName], c.values()[d.valueName], d); }; var b = {
        els: void 0, clear() { for (let c = 0, d = b.els.length; c < d; c++)a.utils.classes(b.els[c]).remove('asc'), a.utils.classes(b.els[c]).remove('desc'); }, getOrder(b) { const c = a.utils.getAttribute(b, 'data-order'); return c == 'asc' || c == 'desc' ? c : a.utils.classes(b).has('desc') ? 'asc' : a.utils.classes(b).has('asc') ? 'desc' : 'asc'; }, getInSensitive(b, c) { const d = a.utils.getAttribute(b, 'data-insensitive'); d === 'false' ? c.insensitive = !1 : c.insensitive = !0; }, setOrder(c) { for (let d = 0, e = b.els.length; d < e; d++) { const f = b.els[d]; if (a.utils.getAttribute(f, 'data-sort') === c.valueName) { const g = a.utils.getAttribute(f, 'data-order'); g == 'asc' || g == 'desc' ? g == c.order && a.utils.classes(f).add(c.order) : a.utils.classes(f).add(c.order); } } },
      }; const c = function () { a.trigger('sortStart'); let c = {}; const d = arguments[0].currentTarget || arguments[0].srcElement || void 0; d ? (c.valueName = a.utils.getAttribute(d, 'data-sort'), b.getInSensitive(d, c), c.order = b.getOrder(d)) : (c = arguments[1] || c, c.valueName = arguments[0], c.order = c.order || 'asc', c.insensitive = typeof c.insensitive === 'undefined' || c.insensitive), b.clear(), b.setOrder(c), c.sortFunction = c.sortFunction || a.sortFunction, a.items.sort((a, b) => { const d = c.order === 'desc' ? -1 : 1; return c.sortFunction(a, b, c) * d; }), a.update(), a.trigger('sortComplete'); }; return a.handlers.sortStart = a.handlers.sortStart || [], a.handlers.sortComplete = a.handlers.sortComplete || [], b.els = a.utils.getByClass(a.listContainer, a.sortClass), a.utils.events.bind(b.els, 'click', c), a.on('searchStart', b.clear), a.on('filterStart', b.clear), c;
    };
  }, {}],
  8: [function (a, b, c) { const d = function (a) { let b; const c = this; const d = function () { b = c.getItemSource(a.item), b && (b = c.clearSourceItem(b, a.valueNames)); }; this.clearSourceItem = function (b, c) { for (let d = 0, e = c.length; d < e; d++) { var f; if (c[d].data) for (let g = 0, h = c[d].data.length; g < h; g++)b.setAttribute(`data-${c[d].data[g]}`, ''); else c[d].attr && c[d].name ? (f = a.utils.getByClass(b, c[d].name, !0), f && f.setAttribute(c[d].attr, '')) : (f = a.utils.getByClass(b, c[d], !0), f && (f.innerHTML = '')); f = void 0; } return b; }, this.getItemSource = function (b) { if (void 0 === b) { for (let c = a.list.childNodes, d = 0, e = c.length; d < e; d++) if (void 0 === c[d].data) return c[d].cloneNode(!0); } else { if (/<tr[\s>]/g.exec(b)) { const f = document.createElement('tbody'); return f.innerHTML = b, f.firstChild; } if (b.indexOf('<') !== -1) { const g = document.createElement('div'); return g.innerHTML = b, g.firstChild; } const h = document.getElementById(a.item); if (h) return h; } }, this.get = function (b, d) { c.create(b); for (var e = {}, f = 0, g = d.length; f < g; f++) { var h; if (d[f].data) for (let i = 0, j = d[f].data.length; i < j; i++)e[d[f].data[i]] = a.utils.getAttribute(b.elm, `data-${d[f].data[i]}`); else d[f].attr && d[f].name ? (h = a.utils.getByClass(b.elm, d[f].name, !0), e[d[f].name] = h ? a.utils.getAttribute(h, d[f].attr) : '') : (h = a.utils.getByClass(b.elm, d[f], !0), e[d[f]] = h ? h.innerHTML : ''); h = void 0; } return e; }, this.set = function (b, d) { const e = function (b) { for (let c = 0, d = a.valueNames.length; c < d; c++) if (a.valueNames[c].data) { for (let e = a.valueNames[c].data, f = 0, g = e.length; f < g; f++) if (e[f] === b) return { data: b }; } else { if (a.valueNames[c].attr && a.valueNames[c].name && a.valueNames[c].name == b) return a.valueNames[c]; if (a.valueNames[c] === b) return b; } }; const f = function (c, d) { let f; const g = e(c); g && (g.data ? b.elm.setAttribute(`data-${g.data}`, d) : g.attr && g.name ? (f = a.utils.getByClass(b.elm, g.name, !0), f && f.setAttribute(g.attr, d)) : (f = a.utils.getByClass(b.elm, g, !0), f && (f.innerHTML = d)), f = void 0); }; if (!c.create(b)) for (const g in d)d.hasOwnProperty(g) && f(g, d[g]); }, this.create = function (a) { if (void 0 !== a.elm) return !1; if (void 0 === b) throw new Error("The list need to have at list one item on init otherwise you'll have to add a template."); const d = b.cloneNode(!0); return d.removeAttribute('id'), a.elm = d, c.set(a, a.values()), !0; }, this.remove = function (b) { b.elm.parentNode === a.list && a.list.removeChild(b.elm); }, this.show = function (b) { c.create(b), a.list.appendChild(b.elm); }, this.hide = function (b) { void 0 !== b.elm && b.elm.parentNode === a.list && a.list.removeChild(b.elm); }, this.clear = function () { if (a.list.hasChildNodes()) for (;a.list.childNodes.length >= 1;)a.list.removeChild(a.list.firstChild); }, d(); }; b.exports = function (a) { return new d(a); }; }, {}],
  9: [function (a, b, c) { function d(a) { if (!a || !a.nodeType) throw new Error('A DOM element reference is required'); this.el = a, this.list = a.classList; } const e = a('./index-of'); const f = /\s+/; const g = Object.prototype.toString; b.exports = function (a) { return new d(a); }, d.prototype.add = function (a) { if (this.list) return this.list.add(a), this; const b = this.array(); const c = e(b, a); return ~c || b.push(a), this.el.className = b.join(' '), this; }, d.prototype.remove = function (a) { if (g.call(a) == '[object RegExp]') return this.removeMatching(a); if (this.list) return this.list.remove(a), this; const b = this.array(); const c = e(b, a); return ~c && b.splice(c, 1), this.el.className = b.join(' '), this; }, d.prototype.removeMatching = function (a) { for (let b = this.array(), c = 0; c < b.length; c++)a.test(b[c]) && this.remove(b[c]); return this; }, d.prototype.toggle = function (a, b) { return this.list ? (typeof b !== 'undefined' ? b !== this.list.toggle(a, b) && this.list.toggle(a) : this.list.toggle(a), this) : (typeof b !== 'undefined' ? b ? this.add(a) : this.remove(a) : this.has(a) ? this.remove(a) : this.add(a), this); }, d.prototype.array = function () { const a = this.el.getAttribute('class') || ''; const b = a.replace(/^\s+|\s+$/g, ''); const c = b.split(f); return c[0] === '' && c.shift(), c; }, d.prototype.has = d.prototype.contains = function (a) { return this.list ? this.list.contains(a) : !!~e(this.array(), a); }; }, { './index-of': 14 }],
  10: [function (a, b, c) {
    const d = window.addEventListener ? 'addEventListener' : 'attachEvent'; const e = window.removeEventListener ? 'removeEventListener' : 'detachEvent'; const f = d !== 'addEventListener' ? 'on' : '';
    const g = a('./to-array'); c.bind = function (a, b, c, e) { a = g(a); for (let h = 0; h < a.length; h++)a[h][d](f + b, c, e || !1); }, c.unbind = function (a, b, c, d) { a = g(a); for (let h = 0; h < a.length; h++)a[h][e](f + b, c, d || !1); };
  }, { './to-array': 16 }],
  11: [function (a, b, c) { b.exports = function (a) { for (var b, c = Array.prototype.slice.call(arguments, 1), d = 0; b = c[d]; d++) if (b) for (const e in b)a[e] = b[e]; return a; }; }, {}],
  12: [function (a, b, c) { b.exports = function (a, b) { let c = a.getAttribute && a.getAttribute(b) || null; if (!c) for (let d = a.attributes, e = d.length, f = 0; f < e; f++) void 0 !== b[f] && b[f].nodeName === b && (c = b[f].nodeValue); return c; }; }, {}],
  13: [function (a, b, c) { b.exports = (function () { return document.getElementsByClassName ? function (a, b, c) { return c ? a.getElementsByClassName(b)[0] : a.getElementsByClassName(b); } : document.querySelector ? function (a, b, c) { return b = `.${b}`, c ? a.querySelector(b) : a.querySelectorAll(b); } : function (a, b, c) { const d = []; const e = '*'; a === null && (a = document); for (let f = a.getElementsByTagName(e), g = f.length, h = new RegExp(`(^|\\s)${b}(\\s|$)`), i = 0, j = 0; i < g; i++) if (h.test(f[i].className)) { if (c) return f[i]; d[j] = f[i], j++; } return d; }; }()); }, {}],
  14: [function (a, b, c) { const d = [].indexOf; b.exports = function (a, b) { if (d) return a.indexOf(b); for (let c = 0; c < a.length; ++c) if (a[c] === b) return c; return -1; }; }, {}],
  15: [function (a, b, c) { b.exports = function (a, b, c) { let d; let e; const f = /(^([+\-]?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?(?=\D|\s|$))|^0x[\da-fA-F]+$|\d+)/g; const g = /^\s+|\s+$/g; const h = /\s+/g; const i = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/; const j = /^0x[0-9a-f]+$/i; const k = /^0/; const l = c || {}; const m = function (a) { return (l.insensitive && (`${a}`).toLowerCase() || `${a}`).replace(g, ''); }; const n = m(a); const o = m(b); const p = n.replace(f, '\0$1\0').replace(/\0$/, '').replace(/^\0/, '').split('\0'); const q = o.replace(f, '\0$1\0').replace(/\0$/, '').replace(/^\0/, '').split('\0'); const r = parseInt(n.match(j), 16) || p.length !== 1 && Date.parse(n); const s = parseInt(o.match(j), 16) || r && o.match(i) && Date.parse(o) || null; const t = function (a, b) { return (!a.match(k) || b == 1) && parseFloat(a) || a.replace(h, ' ').replace(g, '') || 0; }; if (s) { if (r < s) return -1; if (r > s) return 1; } for (let u = 0, v = p.length, w = q.length, x = Math.max(v, w); u < x; u++) { if (d = t(p[u] || '', v), e = t(q[u] || '', w), isNaN(d) !== isNaN(e)) return isNaN(d) ? 1 : -1; if (/[^\x00-\x80]/.test(d + e) && d.localeCompare) { const y = d.localeCompare(e); return y / Math.abs(y); } if (d < e) return -1; if (d > e) return 1; } return 0; }; }, {}],
  16: [function (a, b, c) { function d(a) { return Object.prototype.toString.call(a) === '[object Array]'; }b.exports = function (a) { if (typeof a === 'undefined') return []; if (a === null) return [null]; if (a === window) return [window]; if (typeof a === 'string') return [a]; if (d(a)) return a; if (typeof a.length !== 'number') return [a]; if (typeof a === 'function' && a instanceof Function) return [a]; for (var b = [], c = 0; c < a.length; c++)(Object.prototype.hasOwnProperty.call(a, c) || c in a) && b.push(a[c]); return b.length ? b : []; }; }, {}],
  17: [function (a, b, c) { b.exports = function (a) { return a = void 0 === a ? '' : a, a = a === null ? '' : a, a = a.toString(); }; }, {}],
}, {}, [1]));
