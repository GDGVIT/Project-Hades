version: "3.2"
services:
  attendance:
    build:
      context: .
      dockerfile: attendance/Dockerfile
    container_name: attendance
    depends_on:
    - neo4j
    networks:
    - neo4j_go_net
    ports:
    - 8802:8081
    volumes:
    - .:/go/src/github.com/GDGVIT/Project-Hades
  events:
    build:
      context: .
      dockerfile: events/Dockerfile
    container_name: events
    depends_on:
    - neo4j
    networks:
    - neo4j_go_net
    ports:
    - 8800:8081
    volumes:
    - .:/go/src/github.com/GDGVIT/Project-Hades
  participants:
    build:
      context: .
      dockerfile: participants/Dockerfile
    container_name: participants
    depends_on:
    - neo4j
    networks:
    - neo4j_go_net
    ports:
    - 8801:8081
    volumes:
    - .:/go/src/github.com/GDGVIT/Project-Hades
  simple_projection:
    build:
      context: .
      dockerfile: simple_projection/Dockerfile
    container_name: simple_projection
    depends_on:
    - neo4j
    networks:
    - neo4j_go_net
    ports:
    - 8803:8081
    volumes:
    - .:/go/src/github.com/GDGVIT/Project-Hades
  
  neo4j:
    container_name: neo4j
    image: neo4j:latest
    networks:
    - neo4j_go_net
    ports:
    - 7474:7474
    - 7687:7687
    restart: on-failure
    volumes:
    - ./db/data:/data/
    - ./db/conf/:/conf/
    command: neo4j
  # nginx:
  #   container_name: nginx
  #   build: 
  #     context: .
  #     dockerfile: Web/Dockerfile
  #   ports:
  #   - 80:80
  #   volumes:
  #   - ./Web/nginx.conf:/etc/nginx/nginx.conf
  #   links:
  #   - events:events
  #   - participants:participants
  #   - attendance:attendance
  #   - simple_projection:simple_projection


networks:
  neo4j_go_net:
    driver: bridge

volumes:
  dgraph: