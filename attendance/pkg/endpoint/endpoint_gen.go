// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/GDGVIT/Project-Hades/attendance/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	PostAttendanceEndpoint   endpoint.Endpoint
	PostCouponEndpoint       endpoint.Endpoint
	DeleteCouponEndpoint     endpoint.Endpoint
	UnpostAttendanceEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.AttendanceService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		DeleteCouponEndpoint:     MakeDeleteCouponEndpoint(s),
		PostAttendanceEndpoint:   MakePostAttendanceEndpoint(s),
		PostCouponEndpoint:       MakePostCouponEndpoint(s),
		UnpostAttendanceEndpoint: MakeUnpostAttendanceEndpoint(s),
	}
	for _, m := range mdw["PostAttendance"] {
		eps.PostAttendanceEndpoint = m(eps.PostAttendanceEndpoint)
	}
	for _, m := range mdw["PostCoupon"] {
		eps.PostCouponEndpoint = m(eps.PostCouponEndpoint)
	}
	for _, m := range mdw["DeleteCoupon"] {
		eps.DeleteCouponEndpoint = m(eps.DeleteCouponEndpoint)
	}
	for _, m := range mdw["UnpostAttendance"] {
		eps.UnpostAttendanceEndpoint = m(eps.UnpostAttendanceEndpoint)
	}
	return eps
}
